add-highlighter global/ number-lines

define-command -hidden extend-next-hump %{ execute-keys ?[A-Z][a-z]+|[A-Z]+|[a-z]+<ret> }
define-command -hidden extend-previous-hump %{ execute-keys <a-?>[A-Z][a-z]+|[A-Z]+|[a-z]+<ret> }
define-command -hidden complete-pair %{
  execute-keys 'h"xy"xpl'
  try %{ execute-keys 's\(<ret>\r)' }
  try %{ execute-keys 's\[<ret>\r]' }
  try %{ execute-keys 's\{<ret>\r}' }
  try %{
    execute-keys 's<lt><ret>h'
    try %{
      execute-keys 's<lt><ret>l\r<gt>'
    } catch %{ execute-keys 'l' }
  }
  try %{ execute-keys 's\n<ret><a-C><a-&>(<space>\d' }
  try %{ execute-keys 's(\w|\d)<ret>\d<esc>b~/\W<ret>' }
  try %{ execute-keys 's<space><ret>H\d<esc>b;~/\W<ret>' }
  try %{ execute-keys 's:<ret>H\d<esc>\A:<ret><esc>' }
  try %{ execute-keys 's<semicolon><ret>H\d<esc>\A<semicolon><esc>' }
  try %{ execute-keys 's,<ret>H\d<esc>\A<space>{<ret>}<esc>O<esc>' }
  try %{ execute-keys 's/<ret>H\dh<a-?>[^<minus>a<minus>zA<minus>Z0<minus>9]|^<ret>L"x\c<lt><c-r>x<gt><lt>/<c-r>x<gt><esc><a-f><lt>;' }
  try %{ execute-keys 's\\<ret>H\d<esc>\i<tab><esc>' }
  try %{ execute-keys 's(#|\$)<ret>d\i{}<esc>h' }
}
define-command -hidden align-selection %{
  try %{ execute-keys '<a-C><a-&>(<space>' }
}

def switch-number-line -params .. %{
  try %{ remove-highlighter window/number_lines }
  add-highlighter window/number_lines number-lines %arg{@}
}
hook global NormalKey 0 'switch-number-line -relative'
hook global NormalKey \D.* 'switch-number-line'

hook global InsertDelete ' ' %{ try %{ execute-keys -draft 'h<a-h><a-k>\A\h+\z<ret>i<space><esc><lt>' }}
hook global InsertCompletionShow .* %{
  try %{
    execute-keys -draft 'h<a-K>\h<ret>'
    map window insert '<s-tab>' '<c-p>' -docstring 'previous autocomplete suggestion'
    map window insert '<s-del>' '<c-o>' -docstring 'stop autocomplete for this insert session'
    map window insert '<tab>' '<c-n>' -docstring 'next autocomplete suggestion'
    hook -once -always window InsertCompletionHide .* %{
      map window insert '<s-tab>' '<ret><esc>O' -docstring 'insert indented block'
      map window insert '<s-del>' '<c-r>"' -docstring 'paste default register'
      map window insert '<tab>' '<esc>: complete-pair<ret>i' -docstring 'complete pair'
    }
  }
}

hook global WinSetOption filetype=html|css %{ map window normal '<s-tab>' '<a-x>: comment-block<ret>' -docstring 'comment/uncomment block' }
hook global WinSetOption filetype=python %{
  set window indentwidth 4
  set window tabstop 4
}

map global goto '0' 'h' -docstring 'to line start'
map global goto 'T' '<esc>s[^\d\s\W]+<ret>`<a-;>;~<space>' -docstring 'change selection to title case'
map global goto 'u' '<esc>`' -docstring 'change selection to lower case'
map global goto 'U' '<esc>~' -docstring 'change selection to upper case'
map global goto 'V' '<esc>V' -docstring 'lock view mode'

map global insert '<s-tab>' '<ret><esc>O' -docstring 'insert indented block'
map global insert '<s-del>' '<c-r>"' -docstring 'paste default register'
map global insert '<tab>' '<esc>: complete-pair<ret>i' -docstring 'complete pair'

map global normal '<backspace>' '<a-d>' -docstring 'delete without yanking'
map global normal '<c-r>' 'U' -docstring 'redo'
map global normal '<ret>' '<)>' -docstring 'rotate selection right'
map global normal '<s-del>' '<a-s>' -docstring 'split selection into lines'
map global normal '<s-tab>' ': comment-line<ret>' -docstring 'comment/uncomment line'
map global normal '<space>' ';' -docstring 'collapse selection'
map global normal '<tab>' '<esc><space>' -docstring 'remove additional selections'
map global normal '`' 'z' -docstring 'restore selection from register'
map global normal '~' '<a-`>' -docstring 'swap case'
map global normal '!' ': extend-previous-hump<ret>' -docstring 'extend previous word part'
map global normal '@' 'q' -docstring 'play macro'
map global normal '#' ': extend-next-hump<ret>' -docstring 'extend next word part'
map global normal '$' '<a-L>' -docstring 'select to line end'
map global normal '%' 'm' -docstring 'select to matching pair'
map global normal '^' 'Gi' -docstring 'select to line start'
map global normal '*' '<a-i>w*' -docstring 'find word under cursor'
map global normal '(' '<a-(>' -docstring 'rotate contents left'
map global normal ')' '<a-)>' -docstring 'rotate contents right'
map global normal '<minus>' '<a-space>' -docstring 'delete primary selection'
map global normal '=' ': align-selection<ret>' -docstring 'align selection'
map global normal '{' '{p' -docstring 'extend to paragraph start'
map global normal '}' '}p' -docstring 'extend to paragraph end'
map global normal ';' 'L<a-.>' -docstring 'repeat last find'
map global normal '|' '<a-&>' -docstring 'copy identation'
map global normal "'" '<a-;>' -docstring 'swap cursor and anchor'
map global normal 'a' 'li' -docstring 'append after cursor'
map global normal 'B' '<a-B>' -docstring 'select to WORD start'
map global normal 'C' 'Glc' -docstring 'change to line end'
map global normal 'D' 'Gld' -docstring 'delete to line end'
map global normal 'E' '<a-E>' -docstring 'select to WORD end'
map global normal 'f' 'F' -docstring 'select to find character forwards'
map global normal 'F' '<a-F>' -docstring 'select to find character backwards'
map global normal 'g' 'G' -docstring 'select to begin of object'
map global normal 'G' 'Ge' -docstring 'select to end of buffer'
map global normal 'J' '<a-J>' -docstring 'join lines'
map global normal 'K' '<a-k>' -docstring 'keep matching'
map global normal 'm' 'Z' -docstring 'save selection to register'
map global normal 'M' '<a-Z>' -docstring 'append selection to register'
map global normal 'n' 'n' -docstring 'select to find next match'
map global normal 'N' '<a-n>' -docstring 'select to previous next match'
map global normal 'q' 'Q' -docstring 'start macro recording'
map global normal 'Q' '<a-C>' -docstring 'add selection above'
map global normal 't' 'T' -docstring 'select to find character forwards'
map global normal 'T' '<a-T>' -docstring 'select to find character backwards'
map global normal 'U' 'J<a-x>' -docstring 'extend line downwards'
map global normal 'V' '<a-x>' -docstring 'extend selection to full lines'
map global normal 'W' '<a-W>' -docstring 'select to next WORD start'
map global normal 'x' ' ;d' -docstring 'delete character'
map global normal 'X' '<a-K>' -docstring 'eXclude (keep not matching)'
map global normal 'y' 'y<a-;>;' -docstring 'yank'
map global normal 'Y' 'K<a-x>' -docstring 'extend line upwards'
map global normal 'z' 'v' -docstring 'view mode'
map global normal 'Z' 'C' -docstring 'add selection below'

map global object 'a' '<esc>%' -docstring 'entire buffer'
map global object 'W' '<a-w>' -docstring 'WORD'

map global user '<ret>' '<(>' -docstring 'rotate selection left'
map global user '<tab>' '<esc>i<tab><esc>' -docstring 'insert tab'
map global user '!' '<esc>!' -docstring 'insert external command output above'
map global user '@' '<esc><a-!>' -docstring 'insert external command output below'
map global user '$' '<esc>$' -docstring 'pipe and keep selection of those who succeed'
map global user '<minus>' '<esc><a-x>ypj<a-x>_r-<a-h>' -docstring 'underline string with -'
map global user '=' '<esc><a-x>ypj<a-x>_r=<a-h>' -docstring 'underline string with ='
map global user '|' '<esc>|' -docstring 'pipe and replace with output'
map global user 'e' '<esc>i<c-r>#<esc>' -docstring 'enumerate selections'
map global user 'Q' '<esc><a-x>: comment-block<ret>' -docstring 'comment/uncomment block'

map global view 'a' '<esc><a-a>' -docstring '<a-a>'
map global view 'i' '<esc><a-i>' -docstring '<a-i>'

set global indentwidth 2
set global tabstop 2

colorscheme zenburn
